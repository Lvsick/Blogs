(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{358:function(t,a,s){t.exports=s.p+"assets/img/copy.8e981a4b.png"},372:function(t,a,s){"use strict";s.r(a);var r=s(45),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h4",{attrs:{id:"浅拷贝和深拷贝与赋值的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝和深拷贝与赋值的区别"}},[t._v("#")]),t._v(" 浅拷贝和深拷贝与赋值的区别")]),t._v(" "),r("p",[r("img",{attrs:{src:s(358),alt:""}})]),t._v(" "),r("h4",{attrs:{id:"栈和堆的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈和堆的区别"}},[t._v("#")]),t._v(" 栈和堆的区别")]),t._v(" "),r("ul",[r("li",[t._v("栈自动分配内存空间，由系统释放；堆时动态分配内存，大小不定也不会自动释放。")]),t._v(" "),r("li",[t._v("基本数据类型都存放在栈中。数据大小确定，内存空间大小可以分配，是直接按值存放的，可以直接访问。")]),t._v(" "),r("li",[t._v("引用数据类型都存放在堆中。变量实际上是一个存放在栈内的指针，这个指针指向堆内存中的地址。")])]),t._v(" "),r("h4",{attrs:{id:"传值与传地址的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#传值与传地址的区别"}},[t._v("#")]),t._v(" 传值与传地址的区别")]),t._v(" "),r("ul",[r("li",[t._v("在进行赋值操作的时候，基本数据类型赋值是在内存中新开辟一段栈内存;而引用数据类型赋值也就是传地址。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);